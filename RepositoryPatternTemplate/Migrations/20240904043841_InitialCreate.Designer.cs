// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RepositoryPatternTemplate.Data;

#nullable disable

namespace RepositoryPatternTemplate.API.Migrations
{
    [DbContext(typeof(WeatherForecastDbContext))]
    [Migration("20240904043841_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RepositoryPatternTemplate.Models.WeatherForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("integer");

                    b.Property<DateTime>("WeatherDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Summary = "Hot",
                            TemperatureC = 25,
                            WeatherDate = new DateTime(2024, 9, 4, 4, 38, 40, 973, DateTimeKind.Utc).AddTicks(795)
                        },
                        new
                        {
                            Id = 2,
                            Summary = "Warm",
                            TemperatureC = 20,
                            WeatherDate = new DateTime(2024, 9, 4, 4, 38, 40, 973, DateTimeKind.Utc).AddTicks(797)
                        },
                        new
                        {
                            Id = 3,
                            Summary = "Cool",
                            TemperatureC = 15,
                            WeatherDate = new DateTime(2024, 9, 4, 4, 38, 40, 973, DateTimeKind.Utc).AddTicks(799)
                        },
                        new
                        {
                            Id = 4,
                            Summary = "Cold",
                            TemperatureC = 10,
                            WeatherDate = new DateTime(2024, 9, 4, 4, 38, 40, 973, DateTimeKind.Utc).AddTicks(800)
                        },
                        new
                        {
                            Id = 5,
                            Summary = "Freezing",
                            TemperatureC = 5,
                            WeatherDate = new DateTime(2024, 9, 4, 4, 38, 40, 973, DateTimeKind.Utc).AddTicks(801)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
